"""add LoT and connecting IDs

Revision ID: 9937fade1dc1
Revises: 07e56e4979e0
Create Date: 2025-08-23 17:08:36.065352

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9937fade1dc1'
down_revision: Union[str, Sequence[str], None] = '07e56e4979e0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('level_of_theory',
    sa.Column('lot_id', sa.BigInteger(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('basis', sa.String(), nullable=True),
    sa.Column('solvent', sa.String(), nullable=True),
    sa.Column('lot_string', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('lot_id'),
    sa.UniqueConstraint('method', 'basis', 'solvent', name='uq_lot_method_basis_solvent')
    )
    op.create_index('idx_lot_method_basis', 'level_of_theory', ['method', 'basis'], unique=False)
    op.add_column('molecule', sa.Column('lot_id', sa.BigInteger(), nullable=False))
    op.create_index(op.f('ix_molecule_lot_id'), 'molecule', ['lot_id'], unique=False)
    op.create_foreign_key(None, 'molecule', 'level_of_theory', ['lot_id'], ['lot_id'], ondelete='RESTRICT')
    op.add_column('ts_features', sa.Column('lot_id', sa.BigInteger(), nullable=False))
    op.create_foreign_key(None, 'ts_features', 'level_of_theory', ['lot_id'], ['lot_id'])
    op.drop_column('ts_features', 'level_of_theory')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ts_features', sa.Column('level_of_theory', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ts_features', type_='foreignkey')
    op.drop_column('ts_features', 'lot_id')
    op.drop_constraint(None, 'molecule', type_='foreignkey')
    op.drop_index(op.f('ix_molecule_lot_id'), table_name='molecule')
    op.drop_column('molecule', 'lot_id')
    op.drop_index('idx_lot_method_basis', table_name='level_of_theory')
    op.drop_table('level_of_theory')
    # ### end Alembic commands ###
