services:
  db:
    image: informaticsmatters/rdkit-cartridge-debian:latest
    environment:
      POSTGRES_DB: hab_db
      POSTGRES_USER: chem
      POSTGRES_PASSWORD: chem
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chem -d hab_db -h 127.0.0.1"]
      interval: 5s
      timeout: 5s
      retries: 24   # ~2 minutes

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"   # was "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin_servers/servers.json:/pgadmin4/servers.json
    depends_on:
      - db

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://chem:chem@db:5432/hab_db
      POSTGRES_USER: chem
      POSTGRES_DB: hab_db
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    command: ["./entrypoint.sh", "--reload"]
    ports: ["8000:8000"]

  website:
    image: node:20
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: sh -c "npm run dev -- --host 0.0.0.0 --port 5173"
    ports:
      - "5173:5173"     # Vite dev server
    environment:
      # point your frontend at the API running in Compose
      VITE_API_BASE: "/api/"
      TUNNEL: "1"
    depends_on:
      - api

  maintenance:
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      DATABASE_URL: postgresql+psycopg2://chem:chem@db:5432/hab_db
      POSTGRES_USER: chem
      POSTGRES_DB: hab_db
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    # Run the two tasks every hour in a simple loop; continue even if one fails
    command: >
      sh -lc '
        echo "[maintenance] starting hourly tasks";
        while true; do
          echo "[maintenance] $(date -Iseconds) relabel";
          python -m db.maintenance relabel || echo "[maintenance] relabel failed";
          echo "[maintenance] $(date -Iseconds) g298";
          python -m db.maintenance g298 || echo "[maintenance] g298 failed";
          echo "[maintenance] sleeping 3600s";
          sleep 3600;
        done
      '
    restart: unless-stopped

volumes:
  pgadmin_data: